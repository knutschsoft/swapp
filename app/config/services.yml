imports:
    - { resource: services_form_type.yml }
    - { resource: services_param_converter.yml }
    - { resource: services_repository.yml }
    - { resource: services_twig.yml }

services:
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        tags: ['controller.service_arguments']

# dummy service for param converter
    app.param_converter.example:
        class: AppBundle\ParamConverter\ExampleParamConverter
        arguments: []
        tags:
            - { name: request.param_converter, converter: example, priority: 10 }

    app.bugsnag_user:
        class: AppBundle\BugsnagUser
        arguments: ['@security.token_storage']

    faker.provider.tag:
        class: AppBundle\DataFixtures\Faker\Provider\TagProvider
        tags: [ { name: hautelook_alice.faker.provider } ]

    my_user_provider:
        class: AppBundle\Security\Core\User\FOSUBUserProvider
        arguments: ['@fos_user.user_manager', {facebook: facebook_id}]

    easycorp.easylog.handler:
        class: EasyCorp\EasyLog\EasyLogHandler
        public: false
        arguments:
            - '%kernel.logs_dir%/%kernel.environment%.log'

    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
        autowire: true
        autoconfigure: true
        arguments:
            - 'mysql:dbname=%database_name%;host=%database_host%'
            - { db_table: 'sessions', db_username: '%database_user%', db_password: '%database_password%' }
