imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: admin.yml }
    - { resource: services.yml }

bugsnag:
    api_key: '%bugsnag.api_key%'
    enabled_stages: [prod]
    notify_stages: [production]
    app_version: '%bugsnag.app_version%'
    user: app.bugsnag_user

framework:
    #esi:             ~
    translator:      { fallbacks: ["de"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "de"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: AppBundle\Entity\User
    registration:
        confirmation:
            enabled: true
    from_email:
        address: %mailer_user%
        sender_name: %mailer_user%


hwi_oauth:
    # list of names of the firewalls in which this bundle is active, this setting MUST be set
    firewall_names: [main]

    # an optional setting to configure a query string parameter which can be used to redirect
    # the user after authentication, e.g. /connect/facebook?_destination=/my/destination will
    # redirect the user to /my/destination after facebook authenticates them.  If this is not
    # set then the user will be redirected to the original resource that they requested, or
    # the base address if no resource was requested.  This is similar to the behaviour of
    # [target_path_parameter for form login](http://symfony.com/doc/2.0/cookbook/security/form_login.html).
    # target_path_parameter: _destination

    # an optional setting to use the HTTP REFERER header to be used in case no
    # previous URL was stored in the session (i.e. no resource was requested).
    # This is similar to the behaviour of
    # [using the referring URL for form login](http://symfony.com/doc/2.0/cookbook/security/form_login.html#using-the-referring-url).
    # use_referer: true
    connect:
        account_connector: my_user_provider
    fosub:
        username_iterations: 30
        properties:
            facebook:    facebook_id
    resource_owners:
        facebook:
            type:                facebook
            client_id:           1088679254563341
            client_secret:       7322f9b66850ae9ea761f495623a20a3
            scope:               "email" # "email"
            options:
                display: popup #dialog is optimized for popup window
                auth_type: rerequest # Re-asking for Declined Permissions

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    form_themes:
        - 'VichUploaderBundle:Form:fields.html.twig'
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        server_version: 5.5 # your database server version here
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true
        filters:
            softdeleteable:
                class: Gedmo\SoftDeleteable\Filter\SoftDeleteableFilter
                enabled: true

doctrine_migrations:
    dir_name: '%kernel.root_dir%/DoctrineMigrations'
    namespace: Application\Migrations
    table_name: migration_versions
    name: Application Migrations

stof_doctrine_extensions:
    default_locale: de_DE
    orm:
        default:
            tree: true
            softdeleteable: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

vich_uploader:
    db_driver: orm
    mappings:
        way_point_image:
            uri_prefix:         /images/way_points
            upload_destination: '%kernel.root_dir%/../web/images/way_points'
            inject_on_load:     false # should the file be injected into the uploadable entity when it is loaded from the data store
            delete_on_update:   true  # should the file be deleted when a new file is uploaded
            delete_on_remove:   true  # should the file be deleted when a new file is removed
