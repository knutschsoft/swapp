# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\DataFixtures\Faker\Provider\TagProvider: ~
    App\DataFixtures\Processor\UserProcessor: ~

    easycorp.easylog.handler:
        class: EasyCorp\EasyLog\EasyLogHandler
        public: false
        arguments:
            - '%kernel.logs_dir%/%kernel.environment%.log'

#    templating.engine.twig:
#        class: Symfony\Bundle\TwigBundle\TwigEngine

#    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
#        autowire: true
#        autoconfigure: true
#        arguments:
#            - 'mysql:dbname=%database_name%;host=%database_host%'
#            - { db_table: 'sessions', db_username: '%database_user%', db_password: '%database_password%' }

#    app.form.type.tag:
#        class: App\Form\Type\TagType
#        tags:
#            - { name: form.type, alias: tag }
#
#    app.form.type.walk:
#        class: App\Form\Type\WalkType
#        tags:
#            - { name: form.type, alias: walk }
#
#    app.form.type.walk.prologue:
#        class: App\Form\Type\WalkPrologueType
#        tags:
#            - { name: form.type, alias: walk_prologue }
#
#    app.form.type.waypoint:
#        class: App\Form\Type\WayPointType
#        tags:
#            - { name: form.type, alias: way_point }
