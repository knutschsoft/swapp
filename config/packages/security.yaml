security:
    providers:
        app_user_provider:
            id: App\Security\UserProvider

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt|error)|css|images|js)/
            security: false
        nojwt:
            pattern: ^/api/security/is-confirmation-token-valid
            security: false
            anonymous: true
        nojwt2:
            pattern: ^/api/security/change-password
            security: false
            anonymous: true
        nojwt3:
            pattern: ^/api/security/request-password-reset
            security: false
            anonymous: true

        refreshtoken:
            pattern:  ^/api/token/refresh
            stateless: true
            anonymous: true

        gettoken:
            pattern:  ^/api/getToken
#            stateless: true
            anonymous: true
            provider: app_user_provider
            json_login:
                check_path: /api/getToken
                username_path: username
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        main:
            pattern:  ^/
            #            provider: app_user_provider
            anonymous:    true
#            stateless: true
            json_login:
                check_path: /api/getToken
                username_path: username
                password_path: password
#                success_handler: lexik_jwt_authentication.handler.authentication_success
#                failure_handler: lexik_jwt_authentication.handler.authentication_failure

#        api:
#            pattern:  ^/api
#            provider: app_user_provider
#            stateless: true
#            anonymous: true
#            provider: app_user_provider
#            lexik_jwt: ~
#            guard:
#                authenticators:
#                    - lexik_jwt_authentication.jwt_token_authenticator

    encoders:
        App\Entity\User:
            algorithm: sha512
        #            algorithm: argon2i
        #            algorithm: auto

    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/authentication_token, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/docs, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/security/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/security/login-check, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/security/is-confirmation-token-valid, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/security/signup, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/token/refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/getToken, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
#        - { path: ^/api/, roles: IS_AUTHENTICATED_FULLY }

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN
